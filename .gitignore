local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local hasTeleported = false

local function findNearestBed()
    local character = player.Character
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local beds = game.Workspace:GetDescendants()

    local nearestBed = nil
    local nearestDistance = math.huge

    for _, bed in ipairs(beds) do
        if bed.Name:lower() == "bed" and bed:FindFirstChild("Covers") and bed.Covers.BrickColor ~= player.TeamColor then
            local distance = (bed.Position - humanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestBed = bed
                nearestDistance = distance
            end
        end
    end

    return nearestBed
end

local function tweenToNearestBed()
    local nearestBed = findNearestBed()

    if nearestBed and not hasTeleported then
        hasTeleported = true

        local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")
        local targetPosition = nearestBed.Position + Vector3.new(0, 3, 0)

        local tween = TweenService:Create(humanoidRootPart, TweenInfo.new(1), {CFrame = CFrame.new(targetPosition)})
        tween:Play()

        tween.Completed:Wait()
        hasTeleported = false
    end
end

tweenToNearestBed()
